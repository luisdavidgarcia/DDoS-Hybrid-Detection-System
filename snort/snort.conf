# ----------------------------
# Network Variables
# ----------------------------
# Define the networks Snort is monitoring. 
# In this case, you're watching all your Docker subnets.
ipvar HOME_NET 172.18.0.0/16
ipvar EXTERNAL_NET !$HOME_NET

# ----------------------------
# Port Variables
# ----------------------------
portvar HTTP_PORTS 80

# ----------------------------
# Preprocessors
# ----------------------------
# Preprocessors help Snort interpret and preprocess the traffic before applying rules.

preprocessor stream5_global: track_tcp yes, track_udp yes
preprocessor stream5_tcp: policy linux, detect_anomalies, require_3whs 180, timeout 180, overlap_limit 10, small_segments 3 bytes 150
preprocessor stream5_udp: ignore_any_rules

preprocessor http_inspect: global iis_unicode_map unicode.map 1252
preprocessor http_inspect_server: server default profile all ports { 80 8080 8180 8888 }

preprocessor frag3_global: max_frags 65536
preprocessor frag3_engine: policy windows detect_anomalies

# ----------------------------
# Rule Sets
# ----------------------------
# Specify the path to your rules.
# You can use community rules or write custom rules for DDoS detection.
# For this example, I'm including rules inline. You can have a dedicated rules file as well.

include $RULE_PATH/local.rules

# ----------------------------
# Detection Engine
# ----------------------------
config detection: search-method ac-bnfa

# ----------------------------
# Logging Settings
# ----------------------------
# Output formats: log alerts to a file
output alert_fast: /var/log/snort/alert

# ----------------------------
# Custom DDoS Detection Rules
# ----------------------------

# Detect SYN Flood (too many SYN packets to port 80)
alert tcp any any -> $HOME_NET $HTTP_PORTS (msg:"DDoS SYN Flood detected"; flags:S; threshold:type threshold, track by_src, count 50, seconds 10; sid:1000001; rev:1;)

# Detect ICMP Flood (too many ICMP echo requests)
alert icmp any any -> $HOME_NET any (msg:"DDoS ICMP Flood detected"; itype:8; threshold:type threshold, track by_src, count 100, seconds 10; sid:1000002; rev:1;)

# Detect Slowloris (large number of partial HTTP requests)
alert tcp any any -> $HOME_NET $HTTP_PORTS (msg:"DDoS Slowloris attack detected"; flags:S,12; threshold:type threshold, track by_src, count 10, seconds 20; sid:1000003; rev:1;)
